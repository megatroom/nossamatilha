rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function signedIn() {
      return request.auth.uid != null;
    }

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isValidUId() {
      return request.auth.uid == request.resource.data.uid;
    }

  	match /users/{userId} {
      allow delete: if false;

      allow get: if signedIn();

      allow list: if signedIn() && isAdmin();

      allow create: if signedIn() && request.resource.data.role == 'guest';

      allow update: if signedIn() && isAdmin() && (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['role', 'updatedAt']));
      allow update: if signedIn() && (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['photoURL', 'displayName', 'emailVerified', 'providers', 'testimonials', 'updatedAt', 'lastLoginAt']));
    }

    match /testimonials/{testimonialId} {
      allow create: if signedIn() && isValidUId() && request.resource.data.status == 'pending';
      allow get, list, update, delete: if signedIn() && isAdmin();
    }
  }
}
